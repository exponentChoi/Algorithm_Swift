/**
 Level 2 - 행렬의 곱셈

 [문제 설명]
 2차원 행렬 arr1과 arr2를 입력받아, arr1에 arr2를 곱한 결과를 반환하는 함수, solution을 완성해주세요.

 [제한 조건]
 행렬 arr1, arr2의 행과 열의 길이는 2 이상 100 이하입니다.
 행렬 arr1, arr2의 원소는 -10 이상 20 이하인 자연수입니다.
 곱할 수 있는 배열만 주어집니다.
 
 [입출력 예]
 [arr1]                                              [arr2]                                             [return]
 [[1, 4], [3, 2], [4, 1]]                   [[3, 3], [3, 3]]                               [[15, 15], [15, 15], [15, 15]]
 [[2, 3, 2], [4, 2, 4], [3, 1, 4]]       [[5, 4, 3], [2, 4, 1], [3, 1, 1]]      [[22, 22, 11], [36, 28, 18], [29, 20, 14]]
 */

/**
문제 해설자체가 어렵다..
 
 [[A1,A2]], [B1, B2], [C1, C2]]    [[a1, a2], [b1, b2]] 가 주어졌을 때
 A1 자리에는 (A1 * a1 + A2 * b1)
 A2 자리에는 (A1 * a2 + A2 * b2)
 B1 자리에는 (B1 * a1 + B2 * b1)
 B2 자리에는 (B1 * a2 + B2 * b2)
 
 이런식으로 들어간다.. 알고 봐도 헷갈린다..
 필기하면서 스스로 이해하고 규칙을 찾아서 반복문을 작성하는 힘을 기르자!!
 */

import Foundation

func solution(_ arr1:[[Int]], _ arr2:[[Int]]) -> [[Int]] {
    var answer = [[Int]]()
    
    for i in arr1.indices {
        var temp = [Int]()
        
        for j in arr2[0].indices {
            var sum = 0
            
            for k in arr1[0].indices {
                sum += arr1[i][k] * arr2[k][j]
            }
            
            temp.append(sum)
        }
        
        answer.append(temp)
    }
    
    return answer
}

print(solution([[1, 4], [3, 2], [4, 1]], [[3, 3], [3, 3]])) // [[15, 15], [15, 15], [15, 15]]
print(solution([[2, 3, 2], [4, 2, 4], [3, 1, 4]], [[5, 4, 3], [2, 4, 1], [3, 1, 1]])) // [[22, 22, 11], [36, 28, 18], [29, 20, 14]]
